package view;

import controller.StaffController;
import model.StaffModel;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class StaffEditDialog extends JPanel {
    private JDialog parentDialog;
    private StaffController controller;
    private int maNV;

    private JTextField txtMaNV, txtTenNV, txtLuong, txtSDT, txtTenDangNhap, txtMatKhau;
    private JComboBox<String> cboChucVu;
    private JButton btnSave, btnCancel;

    public StaffEditDialog(JDialog parentDialog, StaffController controller, int maNV) {
        this.parentDialog = parentDialog;
        this.controller = controller;
        this.maNV = maNV;
        initComponents();
        loadStaffData();
    }

    private void initComponents() {
        setLayout(new BorderLayout(10, 10));
        setBorder(new EmptyBorder(15, 15, 15, 15));

        add(createTitlePanel(), BorderLayout.NORTH);
        add(createFormPanel(), BorderLayout.CENTER);
        add(createButtonPanel(), BorderLayout.SOUTH);
    }

    private JPanel createTitlePanel() {
        JPanel titlePanel = new JPanel();
        JLabel titleLabel = new JLabel("S·ª≠a Th√¥ng Tin Nh√¢n Vi√™n");
        titleLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        titlePanel.add(titleLabel);
        return titlePanel;
    }

    private JPanel createFormPanel() {
        JPanel formPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // M√£ NV
        gbc.gridx = 0; gbc.gridy = 0;
        formPanel.add(new JLabel("M√£ NV:"), gbc);
        gbc.gridx = 1;
        txtMaNV = new JTextField(20);
        txtMaNV.setEditable(false);
        formPanel.add(txtMaNV, gbc);

        // T√™n NV
        gbc.gridx = 0; gbc.gridy = 1;
        formPanel.add(new JLabel("T√™n NV:"), gbc);
        gbc.gridx = 1;
        txtTenNV = new JTextField(20);
        formPanel.add(txtTenNV, gbc);

        // L∆∞∆°ng
        gbc.gridx = 0; gbc.gridy = 2;
        formPanel.add(new JLabel("L∆∞∆°ng:"), gbc);
        gbc.gridx = 1;
        txtLuong = new JTextField(20);
        formPanel.add(txtLuong, gbc);

        // S·ªë ƒëi·ªán tho·∫°i
        gbc.gridx = 0; gbc.gridy = 3;
        formPanel.add(new JLabel("S·ªë ƒëi·ªán tho·∫°i:"), gbc);
        gbc.gridx = 1;
        txtSDT = new JTextField(20);
        formPanel.add(txtSDT, gbc);

        // Ch·ª©c v·ª•
        gbc.gridx = 0; gbc.gridy = 4;
        formPanel.add(new JLabel("Ch·ª©c v·ª•:"), gbc);
        gbc.gridx = 1;
        cboChucVu = new JComboBox<>(new String[]{"Nh√¢n vi√™n", "Qu·∫£n tr·ªã vi√™n"});
        formPanel.add(cboChucVu, gbc);

        // T√™n ƒëƒÉng nh·∫≠p
        gbc.gridx = 0; gbc.gridy = 5;
        formPanel.add(new JLabel("T√™n ƒëƒÉng nh·∫≠p:"), gbc);
        gbc.gridx = 1;
        txtTenDangNhap = new JTextField(20);
        formPanel.add(txtTenDangNhap, gbc);

        // M·∫≠t kh·∫©u
        gbc.gridx = 0; gbc.gridy = 6;
        formPanel.add(new JLabel("M·∫≠t kh·∫©u:"), gbc);
        gbc.gridx = 1;
        txtMatKhau = new JTextField(20);
        formPanel.add(txtMatKhau, gbc);

        return formPanel;
    }

    private JPanel createButtonPanel() {
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 0));

        btnSave = new JButton("üíæ L∆∞u");
        btnCancel = new JButton("‚ùå H·ªßy");

        // Style buttons
        btnSave.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        btnCancel.setFont(new Font("Segoe UI", Font.PLAIN, 12));

        buttonPanel.add(btnSave);
        buttonPanel.add(btnCancel);

        // Add event listeners
        btnSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveStaffData();
            }
        });

        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                parentDialog.dispose();
            }
        });

        return buttonPanel;
    }

    private void loadStaffData() {
        try {
            StaffModel staff = controller.getStaffById(maNV);
            if (staff != null) {
                txtMaNV.setText(String.valueOf(staff.getMaNV()));
                txtTenNV.setText(staff.getTenNV());
                txtLuong.setText(String.valueOf(staff.getLuongNV()));
                txtSDT.setText(staff.getSdtNV());
                cboChucVu.setSelectedIndex(staff.getChucVu());
                txtTenDangNhap.setText(staff.getTenDangNhap());
                txtMatKhau.setText(staff.getMatKhau());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "L·ªói khi t·∫£i th√¥ng tin nh√¢n vi√™n: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void saveStaffData() {
        try {
            // L·∫•y th√¥ng tin t·ª´ form
            String tenNV = txtTenNV.getText().trim();
            long luong = Long.parseLong(txtLuong.getText().trim());
            String sdt = txtSDT.getText().trim();
            int chucVu = cboChucVu.getSelectedIndex();
            String tenDangNhap = txtTenDangNhap.getText().trim();
            String matKhau = txtMatKhau.getText().trim();

            // Validation
            if (tenNV.isEmpty() || sdt.isEmpty() || tenDangNhap.isEmpty() || matKhau.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin", "L·ªói", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // T·∫°o ƒë·ªëi t∆∞·ª£ng StaffModel
            StaffModel staff = new StaffModel(maNV, tenNV, luong, sdt, chucVu, tenDangNhap, matKhau);

            // G·ªçi controller ƒë·ªÉ update
            boolean success = controller.updateStaff(staff);

            if (success) {
                JOptionPane.showMessageDialog(this, "C·∫≠p nh·∫≠t th√¥ng tin nh√¢n vi√™n th√†nh c√¥ng!", "Th√†nh c√¥ng", JOptionPane.INFORMATION_MESSAGE);
                parentDialog.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "C·∫≠p nh·∫≠t th·∫•t b·∫°i!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p l∆∞∆°ng h·ª£p l·ªá", "L·ªói", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "L·ªói khi c·∫≠p nh·∫≠t: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }
}